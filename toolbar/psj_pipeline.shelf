<?xml version="1.0" encoding="UTF-8"?>
<shelfDocument>
  <!-- This file contains definitions of shelves, toolbars, and tools.
 It should not be hand-edited when it is being used by the application.
 Note, that two definitions of the same element are not allowed in
 a single file. -->

  <toolshelf name="psj_pipeline" label="psj_pipeline">
    <memberTool name="fx_pipeline"/>
    <memberTool name="keep_work_file"/>
    <memberTool name="render_naming"/>
    <memberTool name="archived_rename_hip"/>
  </toolshelf>

  <tool name="fx_pipeline" label="FX Pipeline" icon="PLASMA_App">
    <script scriptType="python"><![CDATA[import os
import sys
from imp import reload
import hou
from PySide2 import QtCore

psj_dir = hou.hscriptExpression('$PSJ_SITE')

sys.path.append( os.path.join(psj_dir, 
                'script', 
                'fx_pipeline').replace('\\', '/') )

import fx_pipeline
reload( fx_pipeline )

win = fx_pipeline.PipelineSetup()
win.ui.setParent( hou.ui.mainQtWindow(), QtCore.Qt.Window )
win.ui.show()]]></script>
  </tool>

  <tool name="keep_work_file" label="Keep hip file" icon="PLASMA_App">
    <script scriptType="python"><![CDATA[import os
import sys
from imp import reload

import hou

psj_dir = hou.hscriptExpression('$PSJ_SITE')

sys.path.append( os.path.join(psj_dir,
                 'script',
                 'keep_working_file').replace('\\', '/') )

import keep_working_file
reload(keep_working_file)

keep_working_file.load()]]></script>
  </tool>

  <tool name="render_naming" label="Render Namer" icon="PLASMA_App">
    <script scriptType="python"><![CDATA[import os
import sys
from imp import reload
import hou
from PySide2 import QtCore

psj_dir = hou.hscriptExpression('$PSJ_SITE')

sys.path.append( os.path.join(psj_dir, 
                'script', 
                'render_naming').replace('\\', '/') )

import render_naming
reload( render_naming )

if hou.selectedNodes():
    win = render_naming.RenderNaming( hou.selectedNodes() )
    if win.valid:
        win.ui.setParent( hou.ui.mainQtWindow(), QtCore.Qt.Window )
        win.ui.show()

else:
    hou.ui.displayMessage( 'Select the node plz', 
                        severity=hou.severityType.Error )]]></script>
  </tool>

  <tool name="archived_rename_hip" label="Archived Rename Hip" icon="PLASMA_App">
    <script scriptType="python"><![CDATA[import os
import sys
from imp import reload
import hou
from PySide2 import QtCore

psj_dir = hou.hscriptExpression('$PSJ_SITE')

sys.path.append( os.path.join(psj_dir, 
                'script', 
                'archived_rn_hip').replace('\\', '/') )

import archived_rn_hip
reload(archived_rn_hip)

win = archived_rn_hip.ArchivedHip()
win.ui.setParent(hou.ui.mainQtWindow(), QtCore.Qt.Window)
win.ui.show()]]></script>
  </tool>
</shelfDocument>
